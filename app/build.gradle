apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
//apply tinker插件
apply plugin: 'com.tencent.tinker.patch'

//获取版本号
def verCode() {
    def versionPropsFile = file("../version.properties")
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def int verCode = versionProps['VERSION_CODE'].toInteger()
        return verCode;
    } else {
        throw new GradleException("Could not read gradle.properties")
    }
}

//获取版本名
def verName() {
    def versionPropsFile = file("../version.properties")
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        return versionProps['VERSION_NAME']
    } else {
        throw new GradleException("Could not read gradle.properties")
    }
}

//获取构建时间
def buildTime() {
    return new Date().format("MMdd-HH-mm-ss", TimeZone.getTimeZone("GMT+8"))
}

android {



    signingConfigs {

//        debug {
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }

        release {
            keyAlias 'taotao'
            storeFile file('D:/key_wwt/key_taotaotalk.jks')
            keyPassword '123456'
            storePassword '123456'
//            v1SigningEnabled true
//            v2SigningEnabled true
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.bugly"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode verCode()
        versionName verName()
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a'//, 'arm64-v8a',  'x86_64','x86'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //可选，用于生成application类
    //tinker的核心库
    // 多dex配置
    //注释掉原有bugly的仓库
    //   compile 'com.tencent.bugly:crashreport:latest.release'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    compile 'com.android.support:multidex:1.0.1'
    //    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    compile(name: 'pttlib-release', ext: 'aar')

    //rxeasyhttp网络请求库
    compile 'com.zhouyou:rxeasyhttp:2.1.2'
    // litepal数据库
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.tencent.tinker:tinker-android-lib:1.9.6'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    compile 'com.tencent.bugly:nativecrashreport:3.3.1'
    compile 'org.litepal.android:core:1.6.1'
    testCompile 'junit:junit:4.12'
    provided 'com.tencent.tinker:tinker-android-anno:1.9.1'
}